/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/behaviors.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <13 14 15 16>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <13 14 15 16>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1       &kp N2       &kp N3        &kp N4        &kp N5                                         &kp N6           &kp N7        &kp N8        &kp N9       &kp N0               &kp GRAVE
&kp TAB    &kp Q        &kp W        &kp E         &kp R         &kp T                                          &kp Y            &kp U         &kp I         &kp O        &kp P                &kp MINUS
&kp LCTRL  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G                                          &kp H            &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X        &kp C         &kp V         &kp B        &kp LBKT         &kp RBKT         &kp N            &kp M         &kp COMMA     &kp DOT      &kp FSLH             &kp RSHFT
                                     &mo 5         &lt 3 ESCAPE  &lt 1 SPACE  &mt LCTRL TAB    &mt LC(RET) RET  &lt 2 BACKSPACE  &lt 4 ESCAPE  &mo 6
            >;
        };

        right_numbers {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                       &trans                &trans                 &trans         &trans            &trans         &trans
&trans  &trans    &trans    &trans     &trans     &trans                       &kp NUMBER_1          &kp NUMBER_2           &kp NUMBER_3   &kp NUMBER_4      &kp N5         &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                       &kp N6                &kp N7                 &kp N8         &kp N9            &kp N0         &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &kp BACKSLASH  &trans
                            &trans     &trans     &trans  &trans    &kp MINUS  &kp EQUAL             &kp COMMA              &kp PERIOD
            >;
        };

        left_numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans     &trans    &trans    &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans
            >;
        };

        right_nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                    &trans    &trans     &trans     &trans     &trans  &trans
&trans  &trans    &trans    &trans     &trans     &trans                    &trans    &trans     &trans     &trans     &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
                            &trans     &trans     &trans  &trans    &trans  &trans    &trans     &trans
            >;
        };

        left_nav {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &studio_unlock                          &none  &none      &none      &none     &none     &none
&none       &none         &none         &none         &none  &kp C_VOLUME_UP                         &none  &none      &none      &none     &none     &none
&none       &none         &none         &none         &none  &kp C_VOLUME_DOWN                       &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none       &none         &none         &none         &none  &none              &kp K_MUTE    &none  &none  &none      &none      &none     &none     &none
                                        &none         &none  &none              &none         &none  &none  &none      &none
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                      &trans     &trans     &trans     &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                            &kp F7     &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &studio_unlock  &trans    &trans  &trans     &kp MINUS  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans          &trans    &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &studio_unlock                    &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                            &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                            &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12         &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                           &trans   &trans   &trans          &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
